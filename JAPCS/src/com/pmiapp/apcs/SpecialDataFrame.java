/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pmiapp.apcs;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author pmiit
 */
public class SpecialDataFrame extends javax.swing.JFrame {

    /**
     * Creates new form SpecialDataFrame
     */
    public SpecialDataFrame(int length, double[] array) {
        initComponents();
        specialPlotPanel1.setData(length, array);
        if (length==0) {
            maxPressure = 0.;
        } else {
            maxPressure = array[0];
            for (int i=1; i<length; i++) {
                if (array[i]>maxPressure) maxPressure = array[i];
            }
        }
        pressureLabel.setText("Maximum Pressure = "+maxPressure);
        initialize();
    }
    
    private double maxPressure;
    private JFileChooser txtChooser;
    private double timeInterval;
    
    public SpecialDataFrame() {
        initComponents();
        maxPressure = 0.;
        initialize();
    }
    
    private void initialize() {
        txtChooser = new JFileChooser();
        txtChooser.addChoosableFileFilter(new com.pmiapp.common.TxtFilter());
        timeInterval = 0;
    }
    
    public void setTimeInterval(double t) {
        timeInterval = t;
        saveButton.setEnabled(true);
        setTitle("Time Interval: "+timeInterval+" seconds");
    }

    public void addData(double value) {
        specialPlotPanel1.addData(value);
        if (value > maxPressure) {
            maxPressure = value;
            pressureLabel.setText("Maximum Pressure = "+maxPressure);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        specialPlotPanel1 = new com.pmiapp.apcs.SpecialPlotPanel();
        pressureLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Accepting Data - Please Wait...");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout specialPlotPanel1Layout = new javax.swing.GroupLayout(specialPlotPanel1);
        specialPlotPanel1.setLayout(specialPlotPanel1Layout);
        specialPlotPanel1Layout.setHorizontalGroup(
            specialPlotPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 444, Short.MAX_VALUE)
        );
        specialPlotPanel1Layout.setVerticalGroup(
            specialPlotPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(specialPlotPanel1, gridBagConstraints);

        pressureLabel.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(pressureLabel, gridBagConstraints);

        saveButton.setText("Save");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(saveButton, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (txtChooser.showSaveDialog(this)==JFileChooser.APPROVE_OPTION) {
            File f = txtChooser.getSelectedFile();
            // make sure extension is ".txt"
            // note that getExtension always returns a lower case string
            if (!com.pmiapp.common.TxtFilter.getExtension(f).equals("txt")) {
                String s=f.getName();
                if (s.endsWith(".")==false)
                    s=s+".";
                f=new File(f.getParentFile(),s+"txt");
            }
            // check for overwrite
            if (f.exists())
                if (JOptionPane.showConfirmDialog(this, 
                        "File already exists\nDo you want to overwrite?", 
                        "Data File", JOptionPane.YES_NO_OPTION)==JOptionPane.NO_OPTION) return;
            try {
                // write data to file
                PrintWriter pw = new PrintWriter(f);
                pw.printf("seconds\tpsi\n");
                double[] da = specialPlotPanel1.getDataArray();
                for (int i=0; i<da.length; i++) {
                    pw.printf("%f\t%f\n",timeInterval * i / (da.length-1), da[i]);
                }
                pw.close();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this,"Error writing to file");
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel pressureLabel;
    private javax.swing.JButton saveButton;
    private com.pmiapp.apcs.SpecialPlotPanel specialPlotPanel1;
    // End of variables declaration//GEN-END:variables
}
